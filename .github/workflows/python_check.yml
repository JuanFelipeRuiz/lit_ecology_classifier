name: Python application

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install requirements dependencies 
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  static_code_test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install static code test dependencies 
      run: |
        pip install flake8 pylint black 

      
    - name: Lint with flake8 to check Syntax Errors
      if: env.files != ''
      run: |
        flake8 -v lit_ecology_classifier/**/*.py --count --select=E9,F7,F82 --show-source --statistics
        

    - name: Lint with pylint
      if: env.files != ''
      run: |
        pylint lit_ecology_classifier/**/*.py


    - name: Check coding style
      if: env.files != ''
      run: |
        black lit_ecology_classifier/**/*.py --check --diff 
    
  unit_tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4  # Checkout the code again
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

  
      - name: Install unit test dependencies 
        run: |
          pip install pytest pytest-cov mock

      
      - name: Test with pytest and measure coverage
        run: |
          pytest --cov=lit_ecology_classifier
