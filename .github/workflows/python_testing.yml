name: Python testing

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install flake8 pylint  black pytest pytest-cov typeguard

    - name: Lint with flake8
      run: |
        flake8 -v lit_ecology_classifier/**/*.py --count --select=E9,F7,F82 --show-source --statistics || echo "Flake8 found issues"

    - name: Lint with pylint
      run: |
        pylint --max-line-length=140 lit_ecology_classifier/**/*.py || echo "Pylint found issues"

    - name: Check coding style with Black
      run: |
        black lit_ecology_classifier/**/*.py --check --diff || echo "Black formatting found issues"

    - name: Run unit tests
      run: |
        pytest --cov=lit_ecology_classifier
